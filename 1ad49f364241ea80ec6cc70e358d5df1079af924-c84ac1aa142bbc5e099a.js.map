{"version":3,"file":"1ad49f364241ea80ec6cc70e358d5df1079af924-c84ac1aa142bbc5e099a.js","mappings":"kMAIaA,GAAgB,+DAIzBC,EAAAA,EAJyB,iB,UCEtB,IAAMC,GAAe,OAAOC,EAAAA,KAAP,sBAAH,iIAOE,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,UAP9B,4EAYI,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,UAZhC,0FAqBrBP,EAAAA,EArBqB,2DA2BZQ,GAAQ,6HAORC,GAAS,8LAUlBT,EAAAA,EAVkB,2BAeTU,GAAW,qMAUpBV,EAAAA,EAVoB,2BAeXW,GAAe,4DAEjB,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,aAFX,K,UChErB,IAAMC,GAAO,gHAOhBb,EAAAA,EAPgB,+CAcPc,GAAM,OAAOC,EAAAA,EAAP,oBAAHC,CAAAA,KAAAA,UAAAA,OAAAA,8D,UCPhB,MARA,YAAoE,IAA/CC,EAA8C,EAA9CA,UACnB,OACEC,EAAAA,EAAAA,KAACL,EAAD,MACEK,EAAAA,EAAAA,KAACJ,EAAD,CAAKK,MAAOF,EAAWG,IAAI,gBC8BjC,MAxBA,YASmB,IARjBC,EAQgB,EARhBA,MACAC,EAOgB,EAPhBA,KACAC,EAMgB,EANhBA,QAEqBC,EAIL,EALhBP,UACEQ,gBAAmBD,gBAErBE,EAEgB,EAFhBA,KACAC,EACgB,EADhBA,KAEA,OACET,EAAAA,EAAAA,KAACjB,EAAD,CAAc2B,GAAIF,IAChBR,EAAAA,EAAAA,KAACV,EAAD,MACEU,EAAAA,EAAAA,KAACT,EAAD,KAAYY,IACZH,EAAAA,EAAAA,KAACR,EAAD,KAAca,IACdL,EAAAA,EAAAA,KAACP,EAAD,KACGW,EADH,MACmBK,EADnB,eAIFT,EAAAA,EAAAA,KAACW,EAAD,CAAcZ,UAAWO,MCN/B,MAnBA,YAAqD,IAA7BM,EAA4B,EAA5BA,MACtB,OACEZ,EAAAA,EAAAA,KAACnB,EAAD,KACG+B,EAAMC,KACL,oBACEC,KACEC,EAFJ,EAEIA,GACUC,EAHd,EAGIC,OAAUD,KACVE,EAJJ,EAIIA,WACAC,EALJ,EAKIA,YALJ,OAQEnB,EAAAA,EAAAA,KAACoB,GAAD,UAAcD,EAAd,CAA2BX,KAAMQ,EAAMK,IAAKN,EAAIN,KAAMS","sources":["webpack://gatsby-starter-blog/./src/components/PostList/PostItemList.style.tsx","webpack://gatsby-starter-blog/./src/components/PostList/PostItem.style.tsx","webpack://gatsby-starter-blog/./src/components/PostList/Thumbnail.style.tsx","webpack://gatsby-starter-blog/./src/components/PostList/Thumbnail.tsx","webpack://gatsby-starter-blog/./src/components/PostList/PostItem.tsx","webpack://gatsby-starter-blog/./src/components/PostList/PostItemList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { customMQ } from 'styles/theme';\n\nexport const PostItemListWrap = styled.div`\n  width: 72rem;\n  margin: 0 auto;\n\n  ${customMQ} {\n    width: 100%;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport { Link } from 'gatsby';\n\nimport { customMQ } from 'styles/theme';\n\nexport const PostItemWrap = styled(Link)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 0 1.5rem;\n  padding: 1.7rem;\n  border-radius: 1rem;\n  box-shadow: 0 0 0.4rem ${props => props.theme.colors.black02};\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  :hover {\n    box-shadow: 0 0 0.6rem ${props => props.theme.colors.black04};\n    transition: all 0.3s ease-in-out;\n    transform: scale(1.05);\n  }\n\n  :nth-last-of-type(1) {\n    margin: 0;\n  }\n\n  ${customMQ} {\n    flex-direction: column-reverse;\n    align-items: flex-start;\n  }\n`;\n\nexport const PostCard = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0 1.7rem 0 0;\n`;\n\nexport const CardTitle = styled.h1`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  word-break: keep-all;\n  -webkit-line-clamp: 1;\n  overflow: hidden;\n  font-size: 2rem;\n  font-weight: 700;\n  line-height: 140%;\n\n  ${customMQ} {\n    -webkit-line-clamp: 3;\n  }\n`;\n\nexport const CardSummary = styled.h3`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  font-size: 1.5rem;\n  line-height: 130%;\n  margin: 1.3rem 0;\n\n  ${customMQ} {\n    -webkit-line-clamp: 3;\n  }\n`;\n\nexport const CardDescription = styled.p`\n  font-size: 1.3rem;\n  color: ${props => props.theme.colors.darkgray07};\n`;\n","import styled from '@emotion/styled';\n\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport { customMQ } from 'styles/theme';\n\nexport const ImgWrap = styled.div`\n  width: 12.15rem;\n  height: 10.65rem;\n  border-radius: 1rem;\n  overflow: hidden;\n  z-index: 0;\n\n  ${customMQ} {\n    width: 100%;\n    height: auto;\n    margin: 0 0 1.7rem;\n  }\n`;\n\nexport const Img = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  isolation: isolate;\n`;\n","import React from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\nimport { ImgWrap, Img } from './Thumbnail.style';\n\nfunction Thumbnail({ thumbnail }: { thumbnail: IGatsbyImageData }) {\n  return (\n    <ImgWrap>\n      <Img image={thumbnail} alt=\"thumbnail\" />\n    </ImgWrap>\n  );\n}\n\nexport default Thumbnail;\n","import React from 'react';\n\nimport {\n  PostItemWrap,\n  PostCard,\n  CardTitle,\n  CardSummary,\n  CardDescription,\n} from './PostItem.style';\n\nimport ThumbnailImg from './Thumbnail';\n\nimport { PostItemProps } from 'typings/index';\n\nfunction PostItem({\n  title,\n  date,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n  time,\n}: PostItemProps) {\n  return (\n    <PostItemWrap to={link}>\n      <PostCard>\n        <CardTitle>{title}</CardTitle>\n        <CardSummary>{summary}</CardSummary>\n        <CardDescription>\n          {date} &middot; {time} min read\n        </CardDescription>\n      </PostCard>\n      <ThumbnailImg thumbnail={gatsbyImageData} />\n    </PostItemWrap>\n  );\n}\n\nexport default PostItem;\n","import React from 'react';\n\nimport { PostItemListWrap } from './PostItemList.style';\n\nimport PostItem from './PostItem';\n\nimport { ContentProps, PostItemListProps } from 'typings/index';\n\nfunction PostItemList({ posts }: PostItemListProps) {\n  return (\n    <PostItemListWrap>\n      {posts.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            timeToRead,\n            frontmatter,\n          },\n        }: ContentProps) => (\n          <PostItem {...frontmatter} link={slug} key={id} time={timeToRead} />\n        ),\n      )}\n    </PostItemListWrap>\n  );\n}\n\nexport default PostItemList;\n"],"names":["PostItemListWrap","customMQ","PostItemWrap","Link","props","theme","colors","black02","black04","PostCard","CardTitle","CardSummary","CardDescription","darkgray07","ImgWrap","Img","GatsbyImage","process","thumbnail","___EmotionJSX","image","alt","title","date","summary","gatsbyImageData","childImageSharp","link","time","to","ThumbnailImg","posts","map","node","id","slug","fields","timeToRead","frontmatter","PostItem","key"],"sourceRoot":""}