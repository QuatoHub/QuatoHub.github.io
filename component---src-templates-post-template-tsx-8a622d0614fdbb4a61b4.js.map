{"version":3,"file":"component---src-templates-post-template-tsx-8a622d0614fdbb4a61b4.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/domains/post/ContentImg.style.tsx","webpack://gatsby-starter-blog/./src/domains/post/ContentImg.tsx","webpack://gatsby-starter-blog/./src/domains/post/Description.style.tsx","webpack://gatsby-starter-blog/./src/domains/post/Description.tsx","webpack://gatsby-starter-blog/./src/domains/post/Content.style.tsx","webpack://gatsby-starter-blog/./src/domains/post/Content.tsx","webpack://gatsby-starter-blog/./src/domains/post/Comment.tsx","webpack://gatsby-starter-blog/./src/domains/post/LatestPosts.tsx","webpack://gatsby-starter-blog/./src/templates/PostTemplate.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport { customMQ } from 'styles/theme';\n\nexport const ImgWrap = styled.div`\n  width: 100%;\n  height: 30rem;\n  margin: 3rem 0 0;\n  border-radius: 1rem;\n  overflow: hidden;\n  z-index: 0;\n\n  ${customMQ} {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nexport const Img = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 1rem;\n  isolation: isolate;\n`;\n","import React from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\n\nimport { ImgWrap, Img } from './ContentImg.style';\n\nfunction ContentImg({ thumbnail }: { thumbnail: IGatsbyImageData }) {\n  return (\n    <ImgWrap>\n      <Img image={thumbnail} alt=\"thumbnail\" />\n    </ImgWrap>\n  );\n}\n\nexport default ContentImg;\n","import styled from '@emotion/styled';\n\nimport { Link } from 'gatsby';\n\nexport const ContentTitle = styled.h1`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  word-break: keep-all;\n  font-size: 3rem;\n  font-weight: 700;\n  padding: 2.5rem 0;\n  line-height: 130%;\n`;\n\nexport const ContentDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContentDate = styled.span`\n  font-size: 1.5rem;\n  color: ${props => props.theme.colors.darkgray07};\n`;\n\nexport const ContentCategory = styled(Link)`\n  padding: 0.4rem;\n  border-radius: 0.3rem;\n  background: ${props => props.theme.colors.text10};\n  color: ${props => props.theme.colors.white10};\n  font-size: 1.3rem;\n  font-weight: 700;\n\n  :hover {\n    background: ${props => props.theme.colors.primary10};\n  }\n`;\n\nexport const Line = styled.hr`\n  width: 100%;\n  border: 0.1rem solid ${props => props.theme.colors.lightgray05};\n  margin: 1.5rem 0;\n`;\n","import React from 'react';\n\nimport {\n  ContentTitle,\n  ContentDetails,\n  ContentDate,\n  ContentCategory,\n  Line,\n} from './Description.style';\n\nimport { DescriptionProps } from 'typings/index';\n\nfunction DescriptionData({ title, date, category, time }: DescriptionProps) {\n  return (\n    <>\n      <ContentTitle>{title}</ContentTitle>\n      <ContentDetails>\n        <ContentDate>\n          {date} &middot; {time} min read\n        </ContentDate>\n        <ContentCategory to={`/${category.toLowerCase()}`}>\n          {category}\n        </ContentCategory>\n      </ContentDetails>\n      <Line />\n    </>\n  );\n}\n\nexport default DescriptionData;\n","import styled from '@emotion/styled';\n\nexport const StContent = styled.div`\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  width: 100%;\n  margin: 0 auto;\n  padding: 3rem 0;\n  word-wrap: break-word;\n\n  line-height: 175%;\n  font-size: 1.7rem;\n  font-weight: 400;\n  color: ${props => props.theme.colors.text10};\n\n  h1,\n  h2,\n  h3 {\n    font-weight: 700;\n    line-height: 130%;\n  }\n\n  h1 {\n    font-size: 2.8rem;\n    margin-bottom: 2.7rem;\n  }\n\n  h2 {\n    font-size: 2.3rem;\n    margin-bottom: 2.4rem;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n    margin-bottom: 2rem;\n  }\n\n  * + h1 {\n    margin-top: 5.4rem;\n  }\n\n  * + h2 {\n    margin-top: 4.8rem;\n  }\n\n  * + h3 {\n    margin-top: 4rem;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  p {\n    margin: 2rem 0;\n  }\n\n  blockquote {\n    margin: 2.7rem 0;\n    padding: 0.5rem 1.5rem;\n    border-left: 0.4rem solid ${props => props.theme.colors.primary10};\n    background-color: ${props => props.theme.colors.lightgray05};\n\n    strong {\n      font-weight: 700;\n    }\n\n    p {\n      margin: 0.5rem 0;\n    }\n  }\n\n  ol,\n  ul {\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0 0 0 3rem;\n\n    p {\n      margin: 0.5rem 0;\n    }\n  }\n\n  ul {\n    list-style-type: disc;\n  }\n\n  ul ul {\n    list-style-type: circle;\n  }\n\n  ul ul ul {\n    list-style-type: square;\n  }\n\n  ol {\n    list-style-type: decimal;\n  }\n\n  details {\n    summary {\n      cursor: pointer;\n    }\n  }\n\n  hr {\n    border: 0.1rem solid ${props => props.theme.colors.darkgray03};\n    margin: 5.5rem 0;\n  }\n\n  a {\n    font-weight: 700;\n    color: ${props => props.theme.colors.primary10};\n  }\n\n  a:active,\n  a:hover {\n    outline-width: 0;\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  img {\n    width: 100%;\n    border-style: none;\n    border-radius: 1rem;\n  }\n\n  em {\n    font-size: 1.2rem;\n    font-style: italic;\n    display: block;\n    text-align: center;\n    margin: -1.5rem auto 0;\n    word-break: keep-all;\n  }\n\n  table {\n    display: table;\n    border: 0.2rem solid ${props => props.theme.colors.darkgray03};\n    border-collapse: collapse;\n    margin: 1rem 0;\n  }\n\n  thead {\n    display: table-header-group;\n    font-weight: 700;\n    border-bottom: 0.5rem solid ${props => props.theme.colors.darkgray03};\n  }\n\n  tr {\n    display: table-row;\n  }\n\n  th,\n  td {\n    display: table-cell;\n    padding: 1rem;\n    border: 0.2rem solid ${props => props.theme.colors.darkgray03};\n  }\n\n  .deckgo-highlight-code-carbon {\n    margin: 1.5rem 0 2.5rem 0;\n    border-radius: 1rem;\n    font-size: 1.5rem;\n  }\n\n  code {\n    margin: 0 0.3rem 0 0;\n    padding: 0.2rem 0.6rem;\n    border-radius: 0.3rem;\n    background: #e9ecef;\n    font-size: 85%;\n  }\n`;\n","import React from 'react';\n\nimport { StContent } from './Content.style';\n\nfunction Markdown({ html }: { html: string }) {\n  return <StContent dangerouslySetInnerHTML={{ __html: html }} />;\n}\n\nexport default Markdown;\n","import React, { createRef, useEffect } from 'react';\nimport styled from '@emotion/styled';\n\nimport { CommentProps } from 'typings/index';\n\nfunction Comment() {\n  const src = 'https://utteranc.es/client.js';\n  const repo = 'mnxmnz/mnxmnz.github.io';\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n    const attributes: CommentProps = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'comment',\n      theme: 'github-light',\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <CommentWrap ref={element} />;\n}\n\nconst CommentWrap = styled.div`\n  padding: 6rem 0 2rem;\n`;\n\nexport default Comment;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport PostItemList from 'components/PostList/PostItemList';\n\nimport { LatestPostsProps } from 'typings/index';\n\nfunction LatestPosts() {\n  const { posts } = useStaticQuery<LatestPostsProps>(\n    graphql`\n      query {\n        posts: allMarkdownRemark(\n          sort: {\n            order: DESC\n            fields: [frontmatter___date, frontmatter___title]\n          }\n          limit: 3\n          skip: 1\n        ) {\n          edges {\n            node {\n              id\n              fields {\n                slug\n              }\n              timeToRead\n              frontmatter {\n                title\n                summary\n                date(formatString: \"DD MMMM, YYYY\")\n                thumbnail {\n                  childImageSharp {\n                    gatsbyImageData(width: 730)\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  return (\n    <>\n      <LatestPostsLabel>Latest Posts</LatestPostsLabel>\n      <PostItemList posts={posts.edges} />\n    </>\n  );\n}\n\nconst LatestPostsLabel = styled.p`\n  padding: 5rem 0 2rem;\n  font-size: 1.5rem;\n  text-align: center;\n  text-decoration: underline;\n  text-underline-position: under;\n  cursor: default;\n`;\n\nexport default LatestPosts;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport SEO from 'components/Layout/SEO';\nimport ContentImg from 'domains/post/ContentImg';\nimport DescriptionData from 'domains/post/Description';\nimport Markdown from 'domains/post/Content';\nimport Profile from 'components/Profile/Profile';\nimport Comment from 'domains/post/Comment';\nimport LatestPosts from 'domains/post/LatestPosts';\n\nimport { PostTemplateProps } from 'typings/index';\n\nfunction PostTemplate({\n  data: {\n    posts: { edges },\n  },\n}: PostTemplateProps) {\n  const {\n    node: {\n      html,\n      timeToRead,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        category,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0];\n\n  return (\n    <>\n      <SEO title={title} description={summary} cover={publicURL} />\n      <ContentImg thumbnail={gatsbyImageData} />\n      <DescriptionData\n        title={title}\n        date={date}\n        category={category}\n        time={timeToRead}\n      />\n      <Markdown html={html} />\n      <Profile padding=\"7rem 0 4rem 0\" />\n      <Comment />\n      <LatestPosts />\n    </>\n  );\n}\n\nexport const profileQuery = graphql`\n  query Post($slug: String) {\n    posts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { fields: { slug: { eq: $slug } } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          timeToRead\n          frontmatter {\n            title\n            summary\n            date(formatString: \"DD MMMM, YYYY\")\n            category\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 730)\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n"],"names":["ImgWrap","customMQ","Img","GatsbyImage","process","thumbnail","___EmotionJSX","image","alt","ContentTitle","ContentDetails","ContentDate","props","theme","colors","darkgray07","ContentCategory","Link","text10","white10","primary10","Line","lightgray05","title","date","category","time","to","toLowerCase","StContent","darkgray03","html","dangerouslySetInnerHTML","__html","CommentWrap","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","LatestPostsLabel","posts","useStaticQuery","PostItemList","edges","data","node","timeToRead","frontmatter","summary","gatsbyImageData","childImageSharp","publicURL","SEO","description","cover","ContentImg","DescriptionData","Markdown","Profile","padding","Comment","LatestPosts"],"sourceRoot":""}